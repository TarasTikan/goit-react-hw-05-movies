{"version":3,"file":"static/js/871.f661bc19.chunk.js","mappings":"mRACMA,EAAW,+BACXC,EAAU,mCAEHC,EAA2B,WACtC,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,qCAAkDC,GAC1D,EAEYG,EAAoB,SAAAC,GAC/B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,iCAC+DI,EAD/D,+BAGR,EAEYC,EAAqB,SAAAC,GAChC,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,oBAA6CN,EAA7C,mBACR,EAEYO,EAAkB,SAAAD,GAC7B,OAAOJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,mBAGR,EAEYQ,EAAqB,SAAAF,GAChC,OAAOJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,0BAGR,C,6ECAD,UAxBgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OANAE,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAmBI,GAASG,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAC/BL,EAAWK,EADoB,GAGlC,GAAE,CAACJ,IAEmB,IAAnBF,EAAQQ,QACH,sEAGP,wBACGR,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASf,EAApB,EAAoBA,GAApB,OACX,2BACE,qCAAac,MACb,uBAAIC,MAFGf,EADE,KAQlB,C","sources":["api/moviesApi.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f3449ca8495a13b6d35e887839f0061';\n\nexport const FetchTrendingMouviesList = () => {\n  return axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const FetchSearchMovies = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n\nexport const FetchMoviesDetails = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n};\n\nexport const FetchActorsList = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchMoviesReviews = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n","import { FetchMoviesReviews } from 'api/moviesApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    FetchMoviesReviews(movieId).then(({ data: { results } }) =>\n      setReviews(results)\n    );\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movies</p>;\n  }\n  return (\n    <ul>\n      {reviews.map(({ author, content, id }) => (\n        <li key={id}>\n          <h3>Author: {author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","FetchTrendingMouviesList","axios","FetchSearchMovies","query","FetchMoviesDetails","id","FetchActorsList","FetchMoviesReviews","useState","reviews","setReviews","movieId","useParams","useEffect","then","results","data","length","map","author","content"],"sourceRoot":""}