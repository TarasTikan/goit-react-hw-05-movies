{"version":3,"file":"static/js/587.f49b11dc.chunk.js","mappings":"mRACMA,EAAW,+BACXC,EAAU,mCAEHC,EAA2B,WACtC,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,qCAAkDC,GAC1D,EAEYG,EAAoB,SAAAC,GAC/B,OAAOF,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,iCAC+DI,EAD/D,+BAGR,EAEYC,EAAqB,SAAAC,GAChC,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BO,EAA/B,oBAA6CN,EAA7C,mBACR,EAEYO,EAAkB,SAAAD,GAC7B,OAAOJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,mBAGR,EAEYQ,EAAqB,SAAAF,GAChC,OAAOJ,EAAAA,EAAAA,IAAA,UACFH,EADE,kBACgBO,EADhB,4BACsCN,EADtC,0BAGR,C,iGCzBYS,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uGAQVE,GAAUF,EAAAA,EAAAA,IAAO,KAAPA,CAAH,mM,SCIpB,EAbmB,WACjB,OACE,UAACE,EAAD,YACE,yBACE,SAACH,EAAD,CAAYI,GAAIC,EAAAA,EAAAA,KAAhB,qBAEF,yBACE,SAACL,EAAD,CAAYI,GAAIC,EAAAA,EAAAA,OAAhB,wBAIP,C,qECXYC,GAAOL,E,OAAAA,IAAO,SAAPA,CAAH,4Q,uGCgDjB,UA5Ce,WACb,OAAkCM,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnB,EAAQkB,EAAaE,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACM,KAAVrB,GAA0B,OAAVA,KAEpBD,EAAAA,EAAAA,IAAkBC,GAAOsB,MAAK,gBAAWC,EAAX,EAAGC,KAAQD,QAAX,OAC5BT,EAAaS,EADe,KAI9BxB,EAAAA,EAAAA,MACD,GAAE,CAACC,IAQJ,OACE,iCACE,SAAC,IAAD,WACE,SAAC,IAAD,OAEF,kBAAMyB,SAXe,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACfV,EAAgB,CAAEnB,MAAO0B,EAAEG,OAAOC,SAAS9B,MAAM+B,QACjDH,EAAKI,OACN,EAMG,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,UAAQ,KACxC,mBAAQF,KAAK,SAAb,wBAEF,wBACGpB,EAAUuB,KAAI,gBAAGC,EAAH,EAAGA,MAAOnC,EAAV,EAAUA,GAAV,OACb,yBACE,SAAC,KAAD,CAAMoC,MAAO,CAAEC,KAAMxB,GAAYN,GAAE,kBAAaP,GAAhD,SACGmC,KAFInC,EADI,QAUtB,C","sources":["api/moviesApi.js","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.jsx","pages/Header/Header.styled.js","pages/SearchMovies/SearchMovies.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f3449ca8495a13b6d35e887839f0061';\n\nexport const FetchTrendingMouviesList = () => {\n  return axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const FetchSearchMovies = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n\nexport const FetchMoviesDetails = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n};\n\nexport const FetchActorsList = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchMoviesReviews = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  &.active {\n    color: red;\n  }\n`;\n\nexport const NavList = styled('ul')`\n  display: flex;\n  list-style: none;\n  gap: 20px;\n  font-size: 18px;\n  align-items: center;\n  justify-self: center;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n`;\n","import { routes } from 'Router/paths';\nimport { StyledLink, NavList } from './Navigation.styled';\nconst Navigation = () => {\n  return (\n    <NavList>\n      <li>\n        <StyledLink to={routes.home}>Home</StyledLink>\n      </li>\n      <li>\n        <StyledLink to={routes.movies}>Movies</StyledLink>\n      </li>\n    </NavList>\n  );\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\n\nexport const Head = styled('header')`\n  border-bottom: 1px solid #ececec;\n  -webkit-box-shadow: -4px 15px 26px -11px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: -4px 15px 26px -11px rgba(0, 0, 0, 0.75);\n  box-shadow: -4px 15px 26px -11px rgba(0, 0, 0, 0.75);\n  margin-bottom: 20px;\n`;\n","import { FetchSearchMovies } from 'api/moviesApi';\nimport Navigation from 'components/Navigation/Navigation';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { Head } from '../Header/Header.styled';\n\nconst Movies = () => {\n  const [listFilms, setListFilms] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === '' || query === null) return;\n\n    FetchSearchMovies(query).then(({ data: { results } }) =>\n      setListFilms(results)\n    );\n\n    FetchSearchMovies();\n  }, [query]);\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    const form = e.target;\n    setSearchParams({ query: e.target.elements.query.value });\n    form.reset();\n  };\n  return (\n    <>\n      <Head>\n        <Navigation />\n      </Head>\n      <form onSubmit={handleSubmitForm}>\n        <input type=\"text\" name=\"query\" required />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {listFilms.map(({ title, id }) => (\n          <li key={id}>\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","FetchTrendingMouviesList","axios","FetchSearchMovies","query","FetchMoviesDetails","id","FetchActorsList","FetchMoviesReviews","StyledLink","styled","NavLink","NavList","to","routes","Head","useState","listFilms","setListFilms","location","useLocation","useSearchParams","searchParams","setSearchParams","get","useEffect","then","results","data","onSubmit","e","preventDefault","form","target","elements","value","reset","type","name","required","map","title","state","from"],"sourceRoot":""}