{"version":3,"file":"static/js/8.1e9c27ff.chunk.js","mappings":"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","sources":["api/moviesApi.js","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.jsx","pages/Header/Header.styled.js","components/InfoMovies/InfoMovies.styled.js","components/InfoMovies/infoMovies.jsx","pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '9f3449ca8495a13b6d35e887839f0061';\n\nexport const FetchTrendingMouviesList = () => {\n  return axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const FetchSearchMovies = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n};\n\nexport const FetchMoviesDetails = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`);\n};\n\nexport const FetchActorsList = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchMoviesReviews = id => {\n  return axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  &.active {\n    color: red;\n  }\n`;\n\nexport const NavList = styled('ul')`\n  display: flex;\n  list-style: none;\n  gap: 20px;\n  font-size: 18px;\n  align-items: center;\n  justify-self: center;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n`;\n","import { routes } from 'Router/paths';\nimport { StyledLink, NavList } from './Navigation.styled';\nconst Navigation = () => {\n  return (\n    <NavList>\n      <li>\n        <StyledLink to={routes.home}>Home</StyledLink>\n      </li>\n      <li>\n        <StyledLink to={routes.movies}>Movies</StyledLink>\n      </li>\n    </NavList>\n  );\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\n\nexport const Head = styled('header')`\n  border-bottom: 1px solid #ececec;\n  -webkit-box-shadow: -4px 15px 26px -11px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: -4px 15px 26px -11px rgba(0, 0, 0, 0.75);\n  box-shadow: -4px 15px 26px -11px rgba(0, 0, 0, 0.75);\n  margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const WrapInfo = styled('div')`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const GanresList = styled('ul')`\n  display: flex;\n  padding-left: 0px;\n  list-style: none;\n  gap: 10px;\n`;\n","import { WrapInfo, GanresList } from './InfoMovies.styled';\n\nconst InfoMovies = ({ photo, title, score, overview, genres, data }) => {\n  return (\n    <WrapInfo>\n      <div>\n        {photo === null ? (\n          <img\n            src={'https://emojis.wiki/thumbs/emojis/cross-mark.webp'}\n            alt=\"img\"\n            width=\"350px\"\n            heigh=\"250px\"\n          />\n        ) : (\n          <img\n            src={`http://image.tmdb.org/t/p/w500${photo}`}\n            alt=\"img\"\n            width=\"350px\"\n            height=\"250px\"\n          />\n        )}\n      </div>\n      <div>\n        <h1>\n          {title} ({data})\n        </h1>\n        <p>User Score: {Math.round(score)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <GanresList>\n          {genres.map(({ name, id }) => (\n            <li key={id}>\n              <p>{name}</p>\n            </li>\n          ))}\n        </GanresList>\n      </div>\n    </WrapInfo>\n  );\n};\n\nexport default InfoMovies;\n","import styled from 'styled-components';\n\nexport const WrapLink = styled('div')`\n  border: 2px solid black;\n  padding: 10px;\n`;\n\nexport const BackBtn = styled('button')`\n  display: block;\n`;\n","import { useEffect, useState } from 'react';\nimport { FetchMoviesDetails } from 'api/moviesApi';\nimport {\n  Link,\n  useNavigate,\n  Outlet,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport InfoMovies from 'components/InfoMovies/infoMovies';\nimport Navigation from 'components/Navigation/Navigation';\nimport { WrapLink, BackBtn } from './MoviesDetails.styled';\nimport { Head } from 'pages/Header/Header.styled';\nconst MoviesDetails = () => {\n  const navigate = useNavigate();\n  const [details, setDetails] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  useEffect(() => {\n    FetchMoviesDetails(movieId).then(\n      ({\n        data: {\n          overview,\n          title,\n          genres,\n          popularity,\n          backdrop_path,\n          release_date,\n        },\n      }) =>\n        setDetails([\n          title,\n          popularity,\n          overview,\n          genres,\n          backdrop_path,\n          release_date,\n        ])\n    );\n  }, [movieId]);\n\n  if (details[2] === undefined) {\n    return;\n  }\n\n  const handleBackBtn = () => {\n    navigate(location?.state?.from ?? '/goit-react-hw-05-movies');\n  };\n  return (\n    <>\n      <Head>\n        <Navigation />\n      </Head>\n      <BackBtn onClick={handleBackBtn} type=\"Button\">\n        Go back\n      </BackBtn>\n      <InfoMovies\n        photo={details[4]}\n        title={details[0]}\n        score={Math.round(details[1])}\n        overview={details[2]}\n        genres={details[3]}\n        data={Number.parseInt(details[5])}\n      />\n\n      <WrapLink>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link state={location.state} to={`cast`}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link state={location.state} to={`reviews`}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </WrapLink>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["BASE_URL","API_KEY","FetchTrendingMouviesList","axios","FetchSearchMovies","query","FetchMoviesDetails","id","FetchActorsList","FetchMoviesReviews","StyledLink","styled","NavLink","NavList","to","routes","Head","WrapInfo","GanresList","photo","title","score","overview","genres","data","src","alt","width","heigh","height","Math","round","map","name","WrapLink","BackBtn","navigate","useNavigate","useState","details","setDetails","movieId","useParams","location","useLocation","useEffect","then","popularity","backdrop_path","release_date","undefined","Navigation","onClick","state","from","type","Number","parseInt"],"sourceRoot":""}